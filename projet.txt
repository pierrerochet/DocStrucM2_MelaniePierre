PROJET XML

1) DONNEES XML

__consignes:
xml valide et bien formé
csv -> xml --> données en xml
format adapté à la problématique, pas de données inutiles
attentions aux schemas (harmoniser xml et schemas)
schéma (dtd ou relax ng)

__SCHEMA:

tags -> elements
votes -> attributs
temps de jeu -->children: tps moyen + tps médian
ratings --> children : pos + neg
platforms --> sous-elements presents si compatible OU trois sous elements presents avec un bool chacun
price --> convertir en euros


-----------------------------------------------------------------------------------------------
2) PROBLEMATIQUE ET ANALYSE

__liste des csv:
27000jeux

-description_data: 
|texte description des jeux (garder une seule colonne)

-steam.csv: 
|appid 
|Title of app (game)
|release_date
|Language support
|developer
|publisher
|platforms
|required_age

|steamspy_tags

|positive_ratings
|negative_ratings
|average_playtime
|median_playtime
|price

-steam_media_data:
|header

-requirements.csv OUI ->on rentre sa config et dit à quel pourcentage de jeux on peut jouer

-steamspy tag data -> 372 colonnes
creer une liste de jeux ordonnée avec les tags qu'il donne, ouvert, max 15 jeux
+ cases à cocher pour filtrer?


format adapté à la problématique, pas de données inutiles!

analyse des données:



-----------------------------------------------------------------------------------------------
3) ACCESSIBILITÉ

une page d'accueil (page présentation) en xml (//site web statique produit d'une transformation xslt en html) 
->xslt est un lien dans un onglet de l'app? ou page web (en ligne?) en xslt à partir de laquelle on peut télécharger les scripts.
-> ou tout en ligne?
un onglet graphiques data analyse
un onglet de filtrage des données: création d'un "top 10" en fonction de critères

-----------------------------------------------------------------------------------------------
4) INTERFACE: RESULTATS

page de résultats: dash
présentation des données: tout ce qu'on veut (mais comment utiliser flask avec ça??)

-----------------------------------------------------------------------------------------------


# etat intermediaire json -> javascript bibliotheque viz données
